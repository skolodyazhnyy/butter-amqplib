<?php
/*
 * This file is automatically generated.
 */

namespace AMQPLib\Framing\Method;

use AMQPLib\Buffer;
use AMQPLib\Framing\Method;
use AMQPLib\Value;

/**
 * Propose connection tuning parameters.
 */
class ConnectionTune extends Method
{
    /**
     * @var int
     */
    private $channelMax;

    /**
     * @var int
     */
    private $frameMax;

    /**
     * @var int
     */
    private $heartbeat;

    /**
     * @param int $channelMax
     * @param int $frameMax
     * @param int $heartbeat
     */
    public function __construct($channelMax, $frameMax, $heartbeat)
    {
        $this->channelMax = $channelMax;
        $this->frameMax = $frameMax;
        $this->heartbeat = $heartbeat;
    }

    /**
     * Proposed maximum channels.
     *
     * @return int
     */
    public function getChannelMax()
    {
        return $this->channelMax;
    }

    /**
     * Proposed maximum frame size.
     *
     * @return int
     */
    public function getFrameMax()
    {
        return $this->frameMax;
    }

    /**
     * Desired heartbeat delay.
     *
     * @return int
     */
    public function getHeartbeat()
    {
        return $this->heartbeat;
    }

    /**
     * @return string
     */
    public function encode()
    {
        return "\x00\x0A\x00\x1E".
            Value\ShortValue::encode($this->channelMax).
            Value\LongValue::encode($this->frameMax).
            Value\ShortValue::encode($this->heartbeat);
    }

    /**
     * @param Buffer $data
     *
     * @return $this
     */
    public static function decode(Buffer $data)
    {
        return new self(
            Value\ShortValue::decode($data),
            Value\LongValue::decode($data),
            Value\ShortValue::decode($data)
        );
    }
}
