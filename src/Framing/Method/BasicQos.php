<?php
/*
 * This file is automatically generated.
 */

namespace AMQPLib\Framing\Method;

use AMQPLib\Buffer;
use AMQPLib\Framing\Method;
use AMQPLib\Value;

/**
 * Specify quality of service.
 */
class BasicQos extends Method
{
    /**
     * @var int
     */
    private $prefetchSize;

    /**
     * @var int
     */
    private $prefetchCount;

    /**
     * @var bool
     */
    private $global;

    /**
     * @param int  $prefetchSize
     * @param int  $prefetchCount
     * @param bool $global
     */
    public function __construct($prefetchSize, $prefetchCount, $global)
    {
        $this->prefetchSize = $prefetchSize;
        $this->prefetchCount = $prefetchCount;
        $this->global = $global;
    }

    /**
     * Prefetch window in octets.
     *
     * @return int
     */
    public function getPrefetchSize()
    {
        return $this->prefetchSize;
    }

    /**
     * Prefetch window in messages.
     *
     * @return int
     */
    public function getPrefetchCount()
    {
        return $this->prefetchCount;
    }

    /**
     * Apply to entire connection.
     *
     * @return bool
     */
    public function isGlobal()
    {
        return $this->global;
    }

    /**
     * @return string
     */
    public function encode()
    {
        return "\x00\x3C\x00\x0A".
            Value\LongValue::encode($this->prefetchSize).
            Value\ShortValue::encode($this->prefetchCount).
            Value\BooleanValue::encode($this->global);
    }

    /**
     * @param Buffer $data
     *
     * @return $this
     */
    public static function decode(Buffer $data)
    {
        return new self(
            Value\LongValue::decode($data),
            Value\ShortValue::decode($data),
            Value\BooleanValue::decode($data)
        );
    }
}
