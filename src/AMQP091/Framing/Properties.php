<?php
/*
 * This file is automatically generated.
 */

namespace ButterAMQP\AMQP091\Framing;

use ButterAMQP\Buffer;
use ButterAMQP\Value;

/**
 * Helper to encode and decode basic properties.
 *
 * @codeCoverageIgnore
 */
class Properties
{
    /**
     * This class can not be instantiated.
     */
    private function __construct()
    {
    }

    /**
     * @param array $properties
     *
     * @return string
     */
    public static function encode(array $properties)
    {
        $flags = 0;
        $payload = '';

        if (array_key_exists('content-type', $properties)) {
            $flags |= 32768;
            $payload .= Value\ShortStringValue::encode($properties['content-type']);
        }

        if (array_key_exists('content-encoding', $properties)) {
            $flags |= 16384;
            $payload .= Value\ShortStringValue::encode($properties['content-encoding']);
        }

        if (array_key_exists('headers', $properties)) {
            $flags |= 8192;
            $payload .= Value\TableValue::encode($properties['headers']);
        }

        if (array_key_exists('delivery-mode', $properties)) {
            $flags |= 4096;
            $payload .= Value\OctetValue::encode($properties['delivery-mode']);
        }

        if (array_key_exists('priority', $properties)) {
            $flags |= 2048;
            $payload .= Value\OctetValue::encode($properties['priority']);
        }

        if (array_key_exists('correlation-id', $properties)) {
            $flags |= 1024;
            $payload .= Value\ShortStringValue::encode($properties['correlation-id']);
        }

        if (array_key_exists('reply-to', $properties)) {
            $flags |= 512;
            $payload .= Value\ShortStringValue::encode($properties['reply-to']);
        }

        if (array_key_exists('expiration', $properties)) {
            $flags |= 256;
            $payload .= Value\ShortStringValue::encode($properties['expiration']);
        }

        if (array_key_exists('message-id', $properties)) {
            $flags |= 128;
            $payload .= Value\ShortStringValue::encode($properties['message-id']);
        }

        if (array_key_exists('timestamp', $properties)) {
            $flags |= 64;
            $payload .= Value\LongLongValue::encode($properties['timestamp']);
        }

        if (array_key_exists('type', $properties)) {
            $flags |= 32;
            $payload .= Value\ShortStringValue::encode($properties['type']);
        }

        if (array_key_exists('user-id', $properties)) {
            $flags |= 16;
            $payload .= Value\ShortStringValue::encode($properties['user-id']);
        }

        if (array_key_exists('app-id', $properties)) {
            $flags |= 8;
            $payload .= Value\ShortStringValue::encode($properties['app-id']);
        }

        if (array_key_exists('reserved', $properties)) {
            $flags |= 4;
            $payload .= Value\ShortStringValue::encode($properties['reserved']);
        }

        return Value\ShortValue::encode($flags).$payload;
    }

    /**
     * @param Buffer $data
     *
     * @return array
     */
    public static function decode(Buffer $data)
    {
        $flags = Value\ShortValue::decode($data);
        $properties = [];

        if ($flags & 32768) {
            $properties['content-type'] = Value\ShortStringValue::decode($data);
        }

        if ($flags & 16384) {
            $properties['content-encoding'] = Value\ShortStringValue::decode($data);
        }

        if ($flags & 8192) {
            $properties['headers'] = Value\TableValue::decode($data);
        }

        if ($flags & 4096) {
            $properties['delivery-mode'] = Value\OctetValue::decode($data);
        }

        if ($flags & 2048) {
            $properties['priority'] = Value\OctetValue::decode($data);
        }

        if ($flags & 1024) {
            $properties['correlation-id'] = Value\ShortStringValue::decode($data);
        }

        if ($flags & 512) {
            $properties['reply-to'] = Value\ShortStringValue::decode($data);
        }

        if ($flags & 256) {
            $properties['expiration'] = Value\ShortStringValue::decode($data);
        }

        if ($flags & 128) {
            $properties['message-id'] = Value\ShortStringValue::decode($data);
        }

        if ($flags & 64) {
            $properties['timestamp'] = Value\LongLongValue::decode($data);
        }

        if ($flags & 32) {
            $properties['type'] = Value\ShortStringValue::decode($data);
        }

        if ($flags & 16) {
            $properties['user-id'] = Value\ShortStringValue::decode($data);
        }

        if ($flags & 8) {
            $properties['app-id'] = Value\ShortStringValue::decode($data);
        }

        if ($flags & 4) {
            $properties['reserved'] = Value\ShortStringValue::decode($data);
        }

        return $properties;
    }
}
